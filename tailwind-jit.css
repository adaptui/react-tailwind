/*! tailwindcss v2.0.3 | MIT License | https://tailwindcss.com */ /*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
*::before,
*::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

:root {
  -moz-tab-size: 4;
  tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family: system-ui, -apple-system,
    /* Firefox supports this but not yet `system-ui` */ "Segoe UI", Roboto,
    Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Consolas, "Liberation Mono", Menlo,
    monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
} /**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: Inter var, ui-sans-serif, system-ui, -apple-system,
    BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans",
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji"; /* 1 */
  line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e4e4e7; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #a1a1aa;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
}

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

* {
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty, /*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
}
.container {
  width: 100%;
}
@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}
.lib\:text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.lib\:flex {
  display: flex;
}
.lib\:w-full {
  width: 100%;
}
.lib\:overflow-hidden {
  overflow: hidden;
}
.lib\:px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.lib\:py-2\.5 {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}
.lib\:rounded-md {
  border-radius: 0.375rem;
}
.lib\:py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.lib\:inline-flex {
  display: inline-flex;
}
.lib\:box-content {
  box-sizing: content-box;
}
.lib\:flex-shrink-0 {
  flex-shrink: 0;
}
.lib\:mr-2 {
  margin-right: 0.5rem;
}
.lib\:w-4 {
  width: 1rem;
}
.lib\:h-4 {
  height: 1rem;
}
.lib\:py-0\.5 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.lib\:py-0 {
  padding-top: 0px;
  padding-bottom: 0px;
}
.lib\:text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.lib\:flex-wrap {
  flex-wrap: wrap;
}
.lib\:flex-col {
  flex-direction: column;
}
.lib\:text-gray-800 {
  --tw-text-opacity: 1;
  color: rgba(39, 39, 42, var(--tw-text-opacity));
}
.lib\:text-gray-600 {
  --tw-text-opacity: 1;
  color: rgba(82, 82, 91, var(--tw-text-opacity));
}
.lib\:mt-0\.5 {
  margin-top: 0.125rem;
}
.lib\:mt-0 {
  margin-top: 0px;
}
.lib\:ml-auto {
  margin-left: auto;
}
.lib\:-my-1\.5 {
  margin-top: -0.375rem;
  margin-bottom: -0.375rem;
}
.lib\:-my-1 {
  margin-top: -0.25rem;
  margin-bottom: -0.25rem;
}
.lib\:-ml-3 {
  margin-left: -0.75rem;
}
.lib\:-mr-2 {
  margin-right: -0.5rem;
}
.lib\:bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.lib\:hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(228, 228, 231, var(--tw-bg-opacity));
}
.lib\:bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 246, 255, var(--tw-bg-opacity));
}
.lib\:text-blue-600 {
  --tw-text-opacity: 1;
  color: rgba(37, 99, 235, var(--tw-text-opacity));
}
.lib\:hover\:bg-blue-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(219, 234, 254, var(--tw-bg-opacity));
}
.lib\:bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(236, 253, 245, var(--tw-bg-opacity));
}
.lib\:text-green-600 {
  --tw-text-opacity: 1;
  color: rgba(5, 150, 105, var(--tw-text-opacity));
}
.lib\:hover\:bg-green-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(209, 250, 229, var(--tw-bg-opacity));
}
.lib\:bg-orange-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 247, 237, var(--tw-bg-opacity));
}
.lib\:text-orange-600 {
  --tw-text-opacity: 1;
  color: rgba(234, 88, 12, var(--tw-text-opacity));
}
.lib\:hover\:bg-orange-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 237, 213, var(--tw-bg-opacity));
}
.lib\:bg-red-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(254, 242, 242, var(--tw-bg-opacity));
}
.lib\:text-red-600 {
  --tw-text-opacity: 1;
  color: rgba(220, 38, 38, var(--tw-text-opacity));
}
.lib\:hover\:bg-red-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(254, 226, 226, var(--tw-bg-opacity));
}
.lib\:relative {
  position: relative;
}
.lib\:items-center {
  align-items: center;
}
.lib\:justify-center {
  justify-content: center;
}
.lib\:rounded-full {
  border-radius: 9999px;
}
.lib\:h-5 {
  height: 1.25rem;
}
.lib\:w-5 {
  width: 1.25rem;
}
.lib\:h-6 {
  height: 1.5rem;
}
.lib\:w-6 {
  width: 1.5rem;
}
.lib\:h-8 {
  height: 2rem;
}
.lib\:w-8 {
  width: 2rem;
}
.lib\:h-10 {
  height: 2.5rem;
}
.lib\:w-10 {
  width: 2.5rem;
}
.lib\:ring-1 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.lib\:ring-2 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.lib\:ring-white {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(255, 255, 255, var(--tw-ring-opacity));
}
.lib\:text-center {
  text-align: center;
}
.lib\:uppercase {
  text-transform: uppercase;
}
.lib\:text-gray-500 {
  --tw-text-opacity: 1;
  color: rgba(113, 113, 122, var(--tw-text-opacity));
}
.lib\:text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.lib\:text-xxs {
  font-size: 0.625rem;
  line-height: 0.625rem;
}
.lib\:h-full {
  height: 100%;
}
.lib\:object-cover {
  object-fit: cover;
}
.lib\:absolute {
  position: absolute;
}
.lib\:top-0 {
  top: 0px;
}
.lib\:left-0 {
  left: 0px;
}
.lib\:right-0 {
  right: 0px;
}
.lib\:bottom-0 {
  bottom: 0px;
}
.lib\:text-1 {
  font-size: 0.25rem;
  line-height: 0.25rem;
}
.lib\:text-1\.5 {
  font-size: 0.375rem;
  line-height: 0.375rem;
}
.lib\:text-2 {
  font-size: 0.5rem;
  line-height: 0.5rem;
}
.lib\:text-green-500 {
  --tw-text-opacity: 1;
  color: rgba(16, 185, 129, var(--tw-text-opacity));
}
.lib\:bg-gray-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(113, 113, 122, var(--tw-bg-opacity));
}
.lib\:space-x-px > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1px * var(--tw-space-x-reverse));
  margin-left: calc(1px * calc(1 - var(--tw-space-x-reverse)));
}
.lib\:h-1 {
  height: 0.25rem;
}
.lib\:p-px {
  padding: 1px;
}
.lib\:h-1\.5 {
  height: 0.375rem;
}
.lib\:p-0\.5 {
  padding: 0.125rem;
}
.lib\:p-0 {
  padding: 0px;
}
.lib\:h-2 {
  height: 0.5rem;
}
.lib\:p-1 {
  padding: 0.25rem;
}
.lib\:bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.lib\:w-0\.5 {
  width: 0.125rem;
}
.lib\:h-0\.5 {
  height: 0.125rem;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
.lib\:animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.lib\:w-0 {
  width: 0px;
}
.lib\:h-0 {
  height: 0px;
}
.lib\:-space-x-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.375rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.375rem * calc(1 - var(--tw-space-x-reverse)));
}
.lib\:-space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(-0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(-0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.lib\:inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.lib\:bg-black {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 0, 0, var(--tw-bg-opacity));
}
.lib\:opacity-50 {
  opacity: 0.5;
}
.lib\:font-semibold {
  font-weight: 600;
}
.lib\:inline-block {
  display: inline-block;
}
.lib\:whitespace-nowrap {
  white-space: nowrap;
}
.lib\:align-middle {
  vertical-align: middle;
}
.lib\:transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.lib\:px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}
.lib\:font-medium {
  font-weight: 500;
}
.lib\:px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.lib\:px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.lib\:text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.lib\:bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(39, 39, 42, var(--tw-bg-opacity));
}
.lib\:border {
  border-width: 1px;
}
.lib\:border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgba(212, 212, 216, var(--tw-border-opacity));
}
.lib\:hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.lib\:appearance-none {
  -webkit-appearance: none;
  appearance: none;
}
.lib\:select-none {
  -webkit-user-select: none;
  user-select: none;
}
.lib\:w-auto {
  width: auto;
}
.lib\:min-w-6 {
  min-width: 1.5rem;
}
.lib\:min-w-8 {
  min-width: 2rem;
}
.lib\:min-w-10 {
  min-width: 2.5rem;
}
.lib\:px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.lib\:rounded-lg {
  border-radius: 0.5rem;
}
.lib\:h-12 {
  height: 3rem;
}
.lib\:min-w-12 {
  min-width: 3rem;
}
.lib\:cursor-not-allowed {
  cursor: not-allowed;
}
.lib\:opacity-40 {
  opacity: 0.4;
}
.lib\:focus\:z-1:focus {
  z-index: 1;
}
.lib\:-mr-px {
  margin-right: -1px;
}
.lib\:collapse-border > :first-of-type:not(:last-of-type) {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
  border-right-width: 0px;
}
.lib\:collapse-border > :not(:first-of-type):not(:last-of-type) {
  border-radius: 0px;
  border-right-width: 0px;
  border-left-width: 0px;
}
.lib\:collapse-border > :not(:first-of-type):last-of-type {
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px;
  border-left-width: 0px;
}
.lib\:space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.lib\:font-sans {
  font-family: Inter var, ui-sans-serif, system-ui, -apple-system,
    BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans",
    sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
    "Noto Color Emoji";
}
.lib\:p-3 {
  padding: 0.75rem;
}
.lib\:shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.lib\:w-max {
  width: max-content;
}
.lib\:justify-between {
  justify-content: space-between;
}
.lib\:font-bold {
  font-weight: 700;
}
.lib\:text-gray-700 {
  --tw-text-opacity: 1;
  color: rgba(63, 63, 70, var(--tw-text-opacity));
}
.lib\:p-4 {
  padding: 1rem;
}
.lib\:mt-2 {
  margin-top: 0.5rem;
}
.lib\:min-h-8 {
  min-height: 2rem;
}
.lib\:font-light {
  font-weight: 300;
}
.lib\:focus-within\:bg-gray-100:focus-within {
  --tw-bg-opacity: 1;
  background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.lib\:focus-within\:text-black:focus-within {
  --tw-text-opacity: 1;
  color: rgba(0, 0, 0, var(--tw-text-opacity));
}
.lib\:aria-selected\:text-white[aria-selected="true"] {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.lib\:aria-selected\:bg-blue-400[aria-selected="true"] {
  --tw-bg-opacity: 1;
  background-color: rgba(96, 165, 250, var(--tw-bg-opacity));
}
.lib\:is-range-selection\:bg-blue-100[data-is-range-selection] {
  --tw-bg-opacity: 1;
  background-color: rgba(219, 234, 254, var(--tw-bg-opacity));
}
.lib\:is-range-selection\:rounded-none[data-is-range-selection] {
  border-radius: 0px;
}
.lib\:is-range-selection\:text-gray-800[data-is-range-selection] {
  --tw-text-opacity: 1;
  color: rgba(39, 39, 42, var(--tw-text-opacity));
}
.lib\:is-selection-start\:text-white[data-is-selection-start] {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.lib\:is-selection-start\:bg-blue-500[data-is-selection-start] {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}
.lib\:is-selection-end\:text-white[data-is-selection-end] {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.lib\:is-selection-end\:bg-blue-500[data-is-selection-end] {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}
.lib\:is-selection-start\:rounded-l-lg[data-is-selection-start] {
  border-top-left-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}
.lib\:is-selection-end\:rounded-r-lg[data-is-selection-end] {
  border-top-right-radius: 0.5rem;
  border-bottom-right-radius: 0.5rem;
}
.lib\:p-2 {
  padding: 0.5rem;
}
.lib\:outline-none {
  outline: 2px solid transparent;
  outline-offset: 0;
}
.lib\:aria-disabled\:text-gray-400[aria-disabled="true"] {
  --tw-text-opacity: 1;
  color: rgba(161, 161, 170, var(--tw-text-opacity));
}
.lib\:align-top {
  vertical-align: top;
}
.lib\:cursor-pointer {
  cursor: pointer;
}
.lib\:sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.lib\:rounded {
  border-radius: 0.25rem;
}
.lib\:w-3\.5 {
  width: 0.875rem;
}
.lib\:h-3\.5 {
  height: 0.875rem;
}
.lib\:w-3 {
  width: 0.75rem;
}
.lib\:h-3 {
  height: 0.75rem;
}
.lib\:border-1\.5 {
  border-width: 1.5px;
}
.lib\:border-solid {
  border-style: solid;
}
.lib\:border-gray-400 {
  --tw-border-opacity: 1;
  border-color: rgba(161, 161, 170, var(--tw-border-opacity));
}
.lib\:text-gray-400 {
  --tw-text-opacity: 1;
  color: rgba(161, 161, 170, var(--tw-text-opacity));
}
.lib\:bg-gray-200 {
  --tw-bg-opacity: 1;
  background-color: rgba(228, 228, 231, var(--tw-bg-opacity));
}
.lib\:ml-2 {
  margin-left: 0.5rem;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.lib\:animate-spin {
  animation: spin 1s linear infinite;
}
.lib\:text-gray-300 {
  --tw-text-opacity: 1;
  color: rgba(212, 212, 216, var(--tw-text-opacity));
}
@keyframes circularProgress {
  0% {
    stroke-dasharray: 1, 400;
    stroke-dashoffset: 0;
  }

  50% {
    stroke-dasharray: 400, 400;
    stroke-dashoffset: -100;
  }

  100% {
    stroke-dasharray: 400, 400;
    stroke-dashoffset: -260;
  }
}
.lib\:animate-circularProgress {
  animation: circularProgress 2s ease infinite normal none running;
}
.lib\:shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.lib\:gap-4 {
  gap: 1rem;
}
.lib\:pr-4 {
  padding-right: 1rem;
}
.lib\:pl-4 {
  padding-left: 1rem;
}
.lib\:gap-1 {
  gap: 0.25rem;
}
.lib\:focus\:text-blue-500:focus {
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}
.lib\:focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 0;
}
.lib\:font-mono {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
}
.lib\:font-normal {
  font-weight: 400;
}
.lib\:py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.lib\:bg-gray-50 {
  --tw-bg-opacity: 1;
  background-color: rgba(250, 250, 250, var(--tw-bg-opacity));
}
.lib\:border-gray-800 {
  --tw-border-opacity: 1;
  border-color: rgba(39, 39, 42, var(--tw-border-opacity));
}
.lib\:text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.lib\:px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.lib\:w-em {
  width: 1em;
}
.lib\:h-em {
  height: 1em;
}
.lib\:leading-em {
  line-height: 1em;
}
.lib\:text-current {
  color: currentColor;
}
.lib\:bg-gray-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(212, 212, 216, var(--tw-bg-opacity));
}
.lib\:rounded-2xl {
  border-radius: 1rem;
}
.lib\:min-w-half {
  min-width: 50%;
}
.lib\:bg-gradient-to-r {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}
.lib\:from-transparent {
  --tw-gradient-from: transparent;
  --tw-gradient-stops: var(--tw-gradient-from),
    var(--tw-gradient-to, rgba(0, 0, 0, 0));
}
.lib\:via-gray-800 {
  --tw-gradient-stops: var(--tw-gradient-from), #27272a,
    var(--tw-gradient-to, rgba(39, 39, 42, 0));
}
.lib\:to-transparent {
  --tw-gradient-to: transparent;
}
@keyframes progress {
  0% {
    left: -40%;
  }

  100% {
    left: 100%;
  }
}
.lib\:animate-progress {
  animation: progress 1s ease infinite normal none running;
}
.lib\:bg-current {
  background-color: currentColor;
}
.lib\:pointer-events-none {
  pointer-events: none;
}
.lib\:z-1 {
  z-index: 1;
}
.lib\:shadow-thumb {
  --tw-shadow: rgba(0, 0, 0, 0.1) 0px 1px 3px 0px,
    rgba(0, 0, 0, 0.06) 0px 1px 2px 0px;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.lib\:focus-within\:ring-2:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.lib\:focus-within\:ring-current:focus-within {
  --tw-ring-color: currentColor;
}
.lib\:top-1\/4 {
  top: 25%;
}
.lib\:transform {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.lib\:-translate-y-1\/4 {
  --tw-translate-y: -25%;
}
.lib\:w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.lib\:top-unset {
  top: unset;
}
.lib\:w-1 {
  width: 0.25rem;
}
.lib\:w-2 {
  width: 0.5rem;
}
.lib\:flex-row {
  flex-direction: row;
}
.lib\:left-1\/2 {
  left: 50%;
}
.lib\:-translate-x-1\/2 {
  --tw-translate-x: -50%;
}
.lib\:border-2 {
  border-width: 2px;
}
.lib\:border-current {
  border-color: currentColor;
}
.lib\:border-b-transparent {
  border-bottom-color: transparent;
}
.lib\:border-l-transparent {
  border-left-color: transparent;
}
.lib\:border-b-gray-300 {
  border-bottom-color: #d4d4d8;
}
.lib\:border-l-gray-300 {
  border-left-color: #d4d4d8;
}
.lib\:w-12 {
  width: 3rem;
}
.lib\:justify-start {
  justify-content: flex-start;
}
.lib\:w-6\.5 {
  width: 1.625rem;
}
.lib\:w-8\.5 {
  width: 2.125rem;
}
.lib\:transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.lib\:shadow {
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.lib\:h-2\.5 {
  height: 0.625rem;
}
.lib\:w-2\.5 {
  width: 0.625rem;
}
.lib\:translate-x-1\.5 {
  --tw-translate-x: 0.375rem;
}
.lib\:translate-x-1 {
  --tw-translate-x: 0.25rem;
}
.lib\:translate-x-2\.5 {
  --tw-translate-x: 0.625rem;
}
.lib\:translate-x-2 {
  --tw-translate-x: 0.5rem;
}
.lib\:translate-x-3\.5 {
  --tw-translate-x: 0.875rem;
}
.lib\:translate-x-3 {
  --tw-translate-x: 0.75rem;
}
.lib\:translate-x-4 {
  --tw-translate-x: 1rem;
}
.lib\:translate-x-0 {
  --tw-translate-x: 0px;
}
.lib\:transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.lib\:opacity-100 {
  opacity: 1;
}
.lib\:opacity-0 {
  opacity: 0;
}
.lib\:fixed {
  position: fixed;
}
.lib\:z-50 {
  z-index: 50;
}
.lib\:max-w-screen90 {
  max-width: 90vw;
}
.lib\:duration-300 {
  transition-duration: 300ms;
}
.lib\:w-screen90 {
  width: 90vw;
}
.lib\:transform-gpu {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.lib\:bg-transparent {
  background-color: transparent;
}
.lib\:bottom-2\.5 {
  bottom: 0.625rem;
}
.lib\:bottom-2 {
  bottom: 0.5rem;
}
.lib\:bottom-5 {
  bottom: 1.25rem;
}
.lib\:translate-y-20 {
  --tw-translate-y: 5rem;
}
.lib\:translate-y-0 {
  --tw-translate-y: 0px;
}
.lib\:top-full {
  top: 100%;
}
.lib\:left-5 {
  left: 1.25rem;
}
.lib\:left-half {
  left: 50%;
}
.lib\:-translate-x-half {
  --tw-translate-x: -50%;
}
.lib\:right-5 {
  right: 1.25rem;
}
.lib\:top-2\.5 {
  top: 0.625rem;
}
.lib\:top-2 {
  top: 0.5rem;
}
.lib\:top-5 {
  top: 1.25rem;
}
.lib\:-translate-y-20 {
  --tw-translate-y: -5rem;
}
.lib\:bottom-full {
  bottom: 100%;
}
.lib\:fill-current {
  fill: currentColor;
}
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.-top-0 {
  top: 0px;
}
.-right-0 {
  right: 0px;
}
.-left-0 {
  left: 0px;
}
.-bottom-0 {
  bottom: 0px;
}
.left-0 {
  left: 0px;
}
.m-auto {
  margin: auto;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-2 {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.mr-1\.5 {
  margin-right: 0.375rem;
}
.mr-1 {
  margin-right: 0.25rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.ml-1\.5 {
  margin-left: 0.375rem;
}
.ml-1 {
  margin-left: 0.25rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.flex {
  display: flex;
}
.block {
  display: block;
}
.h-16 {
  height: 4rem;
}
.h-em {
  height: 1em;
}
.h-32 {
  height: 8rem;
}
.h-8 {
  height: 2rem;
}
.h-5 {
  height: 1.25rem;
}
.h-6 {
  height: 1.5rem;
}
.w-auto {
  width: auto;
}
.w-em {
  width: 1em;
}
.w-full {
  width: 100%;
}
.w-32 {
  width: 8rem;
}
.w-8 {
  width: 2rem;
}
.w-5 {
  width: 1.25rem;
}
.w-6 {
  width: 1.5rem;
}
.w-36 {
  width: 9rem;
}
.min-w-16 {
  min-width: 4rem;
}
.transform {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.translate-x-1\/2 {
  --tw-translate-x: 50%;
}
.-translate-y-1\/2 {
  --tw-translate-y: -50%;
}
.-translate-x-1\/2 {
  --tw-translate-x: -50%;
}
.translate-y-1\/2 {
  --tw-translate-y: 50%;
}
.select-none {
  -webkit-user-select: none;
  user-select: none;
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-items-center {
  justify-items: center;
}
.gap-1 {
  gap: 0.25rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.overflow-hidden {
  overflow: hidden;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded {
  border-radius: 0.25rem;
}
.border {
  border-width: 1px;
}
.border-2 {
  border-width: 2px;
}
.border-blue-500 {
  --tw-border-opacity: 1;
  border-color: rgba(59, 130, 246, var(--tw-border-opacity));
}
.bg-purple-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(124, 58, 237, var(--tw-bg-opacity));
}
.bg-red-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(239, 68, 68, var(--tw-bg-opacity));
}
.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(39, 39, 42, var(--tw-bg-opacity));
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgba(63, 63, 70, var(--tw-bg-opacity));
}
.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(37, 99, 235, var(--tw-bg-opacity));
}
.bg-blue-700 {
  --tw-bg-opacity: 1;
  background-color: rgba(29, 78, 216, var(--tw-bg-opacity));
}
.bg-orange-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(249, 115, 22, var(--tw-bg-opacity));
}
.bg-orange-700 {
  --tw-bg-opacity: 1;
  background-color: rgba(194, 65, 12, var(--tw-bg-opacity));
}
.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgba(220, 38, 38, var(--tw-bg-opacity));
}
.bg-red-700 {
  --tw-bg-opacity: 1;
  background-color: rgba(185, 28, 28, var(--tw-bg-opacity));
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.bg-blue-500 {
  --tw-bg-opacity: 1;
  background-color: rgba(59, 130, 246, var(--tw-bg-opacity));
}
.bg-red-300 {
  --tw-bg-opacity: 1;
  background-color: rgba(252, 165, 165, var(--tw-bg-opacity));
}
.bg-red-800 {
  --tw-bg-opacity: 1;
  background-color: rgba(153, 27, 27, var(--tw-bg-opacity));
}
.object-cover {
  object-fit: cover;
}
.p-8 {
  padding: 2rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.pt-6 {
  padding-top: 1.5rem;
}
.pl-6 {
  padding-left: 1.5rem;
}
.pl-1\.5 {
  padding-left: 0.375rem;
}
.pl-1 {
  padding-left: 0.25rem;
}
.pb-2 {
  padding-bottom: 0.5rem;
}
.text-center {
  text-align: center;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-xxs {
  font-size: 0.625rem;
  line-height: 0.625rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.leading-normal {
  line-height: 1.5;
}
.text-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}
.text-current {
  color: currentColor;
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgba(212, 212, 216, var(--tw-text-opacity));
}
.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgba(39, 39, 42, var(--tw-text-opacity));
}
.text-blue-300 {
  --tw-text-opacity: 1;
  color: rgba(147, 197, 253, var(--tw-text-opacity));
}
.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgba(30, 64, 175, var(--tw-text-opacity));
}
.text-orange-300 {
  --tw-text-opacity: 1;
  color: rgba(253, 186, 116, var(--tw-text-opacity));
}
.text-orange-800 {
  --tw-text-opacity: 1;
  color: rgba(154, 52, 18, var(--tw-text-opacity));
}
.text-red-300 {
  --tw-text-opacity: 1;
  color: rgba(252, 165, 165, var(--tw-text-opacity));
}
.text-red-800 {
  --tw-text-opacity: 1;
  color: rgba(153, 27, 27, var(--tw-text-opacity));
}
.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgba(113, 113, 122, var(--tw-text-opacity));
}
.text-red-500 {
  --tw-text-opacity: 1;
  color: rgba(239, 68, 68, var(--tw-text-opacity));
}
.text-orange-500 {
  --tw-text-opacity: 1;
  color: rgba(249, 115, 22, var(--tw-text-opacity));
}
.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}
.opacity-100 {
  opacity: 1;
}
.opacity-0 {
  opacity: 0;
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.ring-0 {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.ring-red-200 {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(254, 202, 202, var(--tw-ring-opacity));
}
.touch-action-none {
  touch-action: none;
}
.focus-within\:outline-none:focus-within {
  outline: 2px solid transparent;
  outline-offset: 0;
}
.focus-within\:ring-2:focus-within {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
.focus-within\:ring-gray-600:focus-within {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(82, 82, 91, var(--tw-ring-opacity));
}
.hover\:bg-white:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}
.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}
.hover\:text-gray-800:hover {
  --tw-text-opacity: 1;
  color: rgba(39, 39, 42, var(--tw-text-opacity));
}
.hover\:text-blue-800:hover {
  --tw-text-opacity: 1;
  color: rgba(30, 64, 175, var(--tw-text-opacity));
}
.hover\:text-orange-800:hover {
  --tw-text-opacity: 1;
  color: rgba(154, 52, 18, var(--tw-text-opacity));
}
.hover\:text-red-800:hover {
  --tw-text-opacity: 1;
  color: rgba(153, 27, 27, var(--tw-text-opacity));
}
.focus\:text-blue-500:focus {
  --tw-text-opacity: 1;
  color: rgba(59, 130, 246, var(--tw-text-opacity));
}
@media (min-width: 640px) {
  .sm\:lib\:max-w-xs {
    max-width: 20rem;
  }

  .sm\:lib\:w-80 {
    width: 20rem;
  }
}
@media (min-width: 768px) {
  .md\:flex {
    display: flex;
  }

  .md\:h-auto {
    height: auto;
  }

  .md\:w-48 {
    width: 12rem;
  }

  .md\:rounded-none {
    border-radius: 0px;
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:p-8 {
    padding: 2rem;
  }

  .md\:text-left {
    text-align: left;
  }
}
